#version: "2"
version: "3.7"

services:
  namenode:
    image: harisekhon/hadoop:2.8
    container_name: namenode
    hostname: namenode
    #    hostname: 192.168.100.83
    networks:
      redis:
        ipv4_address: 172.20.0.5
    volumes:
      - ./hadoop/hadoop/hdfs-site.xml:/hadoop-2.8.2/etc/hadoop/hdfs-site.xml
    ports:
      - 8020:8020
      - 8042:8042
      - 8089:8088
      - 9000:9000
      - 9864:9864
      - 9870:9870
      - 10020:10020
      - 19888:19888
      - 50010:50010
      - 50020:50020
      - 50070:50070
      - 50075:50075
      - 50090:50090
#    command: bash -c "hadoop fs -chmod 777 / "

  hbase:
    image: yulin/hbase-standalone:1.0.1-hbase2.0.0
    container_name: hbase
    hostname: hbase
    networks:
      redis:
        ipv4_address: 172.20.0.6
    #    volumes:
    #      - hbase_data:/hbase-data
    #      - hbase_zookeeper_data:/zookeeper-data
    ports:
      - 16000:16000
      - 16010:16010
      - 16020:16020
      - 16030:16030
    environment:
      SERVICE_PRECONDITION: "namenode:50070 namenode:50075 zookeeper:2181"
    env_file:
      - ./hbase-standalone.env
    depends_on:
      - namenode
      - zookeeper
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    container_name: zookeeper
    networks:
      redis:
        ipv4_address: 172.20.0.7
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    image: docker.io/bitnami/kafka:3
    container_name: kafka
    hostname: kafka
#    hostname: 192.168.100.83
    networks:
      redis:
        ipv4_address: 172.20.0.8
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=0
      - ALLOW_PLAINTEXT_LISTENER=yes
#    volumes:
#      - ./kafka_0_data:/bitnami/kafka
    depends_on:
      - zookeeper

  redis:
    image: redis
    container_name: redis
    hostname: redis
    networks:
      redis:
        ipv4_address: 172.20.0.9
    ports:
      - 6379:6379
  canal-server:
    image: canal/canal-server
    container_name: canal-server
    hostname: canal-server
    networks:
      redis:
        ipv4_address: 172.20.0.10
    environment:
      - canal.destinations=example
      - canal.instance.master.address=192.168.100.83:3306
      - canal.instance.dbUsername=root
      - canal.instance.dbPassword=root
      - canal.instance.connectionCharset=UTF-8
      - canal.instance.tsdb.enable=true
      - canal.instance.gtidon=false
    ports:
      - 11111:11111



networks:
  redis:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.20.0.0/24"

#volumes:
#  openresty_data:
#    driver: local
#  zookeeper_data:
#    driver: local
#  kafka_0_data:
#    driver: local